/*
 * Copyright 2012-2017 Tobi29
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    def kotlinVersion = "1.1.1"
    def dokkaVersion = "0.9.13"
    def junitPlatformVersion = "1.0.0-M3"
    def shadowVersion = "1.2.4"

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadowVersion"
    }
}

allprojects {
    def env = System.getenv()
    if (env.containsKey("VERSION")) {
        version = env["VERSION"]
    } else {
        version = findProperty("build.version")
    }
    group = "com.github.Tobi29.Scapes"

    repositories {
        jcenter()
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap-1.1"
        }
        maven {
            url "https://dl.bintray.com/jetbrains/spek"
        }
        maven {
            url "https://maven-eclipse.github.io/maven"
        }
        maven {
            url "https://jitpack.io"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "3.5"
    distributionUrl =
            "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

ext {
    kotlinVersion = "1.1.1"
    kotlinLoggingVersion = "1.4.4"
    slf4jVersion = "1.7.25"
    spekVersion = "1.1.0"
    swtVersion = "4.6"
    lwjglVersion = "3.1.1"
    log4jVersion = "2.8.1"
    commonsCLIVersion = "1.4"
    jnaVersion = "4.4.0"
    scapesEngineVersion = "a70f86919f"

    kotlinLogging = "io.github.microutils:kotlin-logging:$kotlinLoggingVersion"
    slf4jAPI = "org.slf4j:slf4j-api:$slf4jVersion"
    slf4jSimple = "org.slf4j:slf4j-simple:$slf4jVersion"
    kotlinSTD = "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    lwjgl = "org.lwjgl:lwjgl:$lwjglVersion"
    lwjglEGL = "org.lwjgl:lwjgl-egl:$lwjglVersion"
    lwjglGLFW = "org.lwjgl:lwjgl-glfw:$lwjglVersion"
    lwjglOpenAL = "org.lwjgl:lwjgl-openal:$lwjglVersion"
    lwjglOpenGL = "org.lwjgl:lwjgl-opengl:$lwjglVersion"
    lwjglOpenGLES = "org.lwjgl:lwjgl-opengles:$lwjglVersion"
    lwjglSTB = "org.lwjgl:lwjgl-stb:$lwjglVersion"
    lwjglTinyFD = "org.lwjgl:lwjgl-tinyfd:$lwjglVersion"
    spekEngine = "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"
    commonsCLI = "commons-cli:commons-cli:$commonsCLIVersion"
    jna = "net.java.dev.jna:jna:$jnaVersion"
    swtLinux32 = "org.eclipse.swt:org.eclipse.swt.gtk.linux.x86:$swtVersion"
    swtLinux64 = "org.eclipse.swt:org.eclipse.swt.gtk.linux.x86_64:$swtVersion"
    swtMacOSX =
            "org.eclipse.swt:org.eclipse.swt.cocoa.macosx.x86_64:$swtVersion"
    swtWindows32 = "org.eclipse.swt:org.eclipse.swt.win32.win32.x86:$swtVersion"
    swtWindows64 =
            "org.eclipse.swt:org.eclipse.swt.win32.win32.x86_64:$swtVersion"

    log4jAPI = "org.apache.logging.log4j:log4j-api:$log4jVersion"
    log4jCore = "org.apache.logging.log4j:log4j-core:$log4jVersion"
    log4jSLF4J = "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"

    scapesEngineEngine =
            "com.github.Tobi29.ScapesEngine:Engine:$scapesEngineVersion"
    scapesEngineUtils =
            "com.github.Tobi29.ScapesEngine:Utils:$scapesEngineVersion"
    scapesEngineTagStructureJSON =
            "com.github.Tobi29.ScapesEngine:TagStructureJSON:$scapesEngineVersion"
    scapesEngineSWTUtils =
            "com.github.Tobi29.ScapesEngine:SWTUtils:$scapesEngineVersion"
    scapesEngineServerFramework =
            "com.github.Tobi29.ScapesEngine:ServerFramework:$scapesEngineVersion"
    scapesEngineSQLFramework =
            "com.github.Tobi29.ScapesEngine:SQLFramework:$scapesEngineVersion"
    scapesEngineNIOFileSystem =
            "com.github.Tobi29.ScapesEngine:NIOFileSystem:$scapesEngineVersion"
    scapesEngineJVMSSLProvider =
            "com.github.Tobi29.ScapesEngine:JVMSSLProvider:$scapesEngineVersion"
    scapesEngineSQLite =
            "com.github.Tobi29.ScapesEngine:SQLite:$scapesEngineVersion"
    scapesEngineSQLJet =
            "com.github.Tobi29.ScapesEngine:SQLJet:$scapesEngineVersion"
    scapesEngineMariaDB =
            "com.github.Tobi29.ScapesEngine:MariaDB:$scapesEngineVersion"
    scapesEngineMBeansCPUReader =
            "com.github.Tobi29.ScapesEngine:MBeansCPUReader:$scapesEngineVersion"
    scapesEngineGLFWBackend =
            "com.github.Tobi29.ScapesEngine:GLFWBackend:$scapesEngineVersion"
    scapesEngineCodecOGG =
            "com.github.Tobi29.ScapesEngine:CodecOGG:$scapesEngineVersion"
    scapesEngineCodecMP3 =
            "com.github.Tobi29.ScapesEngine:CodecMP3:$scapesEngineVersion"
    scapesEngineCodecWAV =
            "com.github.Tobi29.ScapesEngine:CodecWAV:$scapesEngineVersion"
    scapesEngineFileSystems =
            "com.github.Tobi29.ScapesEngine:FileSystems:$scapesEngineVersion"
    scapesEngineGenerationUtils =
            "com.github.Tobi29.ScapesEngine:GenerationUtils:$scapesEngineVersion"
    scapesEngineGraphicsUtils =
            "com.github.Tobi29.ScapesEngine:GraphicsUtils:$scapesEngineVersion"
    scapesEngineThreadUtils =
            "com.github.Tobi29.ScapesEngine:ThreadUtils:$scapesEngineVersion"
    scapesEngineTestAssertions =
            "com.github.Tobi29.ScapesEngine:TestAssertions:$scapesEngineVersion"
    scapesEngineOpenALSounds =
            "com.github.Tobi29.ScapesEngine:OpenALSounds:$scapesEngineVersion"
}
