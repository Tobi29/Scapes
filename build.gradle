/*
 * Copyright 2012-2017 Tobi29
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    def kotlinVersion = "1.1.4-eap-54"
    def scapesEngineBuildVersion = "0.0.1"
    def dokkaVersion = "0.9.14"
    def junitPlatformVersion = "1.0.0-M4"
    def shadowVersion = "2.0.0"

    repositories {
        jcenter()
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-dev"
        }
        maven {
            url "https://jitpack.io"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.github.Tobi29:ScapesEngineBuild:$scapesEngineBuildVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadowVersion"
    }
}

apply plugin: "idea"

allprojects {
    def env = System.getenv()
    if (env.containsKey("VERSION")) {
        version = env["VERSION"]
    } else {
        version = findProperty("build.version")
    }
    group = "com.github.Tobi29.Scapes"

    repositories {
        jcenter()
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-dev"
        }
        maven {
            url "https://dl.bintray.com/jetbrains/spek"
        }
        maven {
            url "https://maven-eclipse.github.io/maven"
        }
        //mavenLocal()
        maven {
            url "https://jitpack.io"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.0.2"
    distributionUrl =
            "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

ext {
    slf4jVersion = "1.7.25"
    spekVersion = "1.1.2"
    threetenbpVersion = "1.3.3"
    swtVersion = "4.6"
    lwjglVersion = "3.1.2"
    log4jVersion = "2.8.1"
    jnaVersion = "4.4.0"
    scapesEngineVersion = "0.0.1"

    slf4jSimple = "org.slf4j:slf4j-simple:$slf4jVersion"
    threeten = "org.threeten:threetenbp:$threetenbpVersion"
    lwjgl = "org.lwjgl:lwjgl:$lwjglVersion"
    lwjglEGL = "org.lwjgl:lwjgl-egl:$lwjglVersion"
    lwjglGLFW = "org.lwjgl:lwjgl-glfw:$lwjglVersion"
    lwjglOpenAL = "org.lwjgl:lwjgl-openal:$lwjglVersion"
    lwjglOpenGL = "org.lwjgl:lwjgl-opengl:$lwjglVersion"
    lwjglOpenGLES = "org.lwjgl:lwjgl-opengles:$lwjglVersion"
    lwjglSTB = "org.lwjgl:lwjgl-stb:$lwjglVersion"
    lwjglTinyFD = "org.lwjgl:lwjgl-tinyfd:$lwjglVersion"
    spekEngine = "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"
    jna = "net.java.dev.jna:jna:$jnaVersion"
    swtLinux32 = "org.eclipse.swt:org.eclipse.swt.gtk.linux.x86:$swtVersion"
    swtLinux64 = "org.eclipse.swt:org.eclipse.swt.gtk.linux.x86_64:$swtVersion"
    swtMacOSX =
            "org.eclipse.swt:org.eclipse.swt.cocoa.macosx.x86_64:$swtVersion"
    swtWindows32 = "org.eclipse.swt:org.eclipse.swt.win32.win32.x86:$swtVersion"
    swtWindows64 =
            "org.eclipse.swt:org.eclipse.swt.win32.win32.x86_64:$swtVersion"

    log4jAPI = "org.apache.logging.log4j:log4j-api:$log4jVersion"
    log4jCore = "org.apache.logging.log4j:log4j-core:$log4jVersion"
    log4jSLF4J = "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"

    scapesEngineEngine =
            "com.github.Tobi29.ScapesEngine:EngineJVM:$scapesEngineVersion"
    scapesEngineArgumentParser =
            "com.github.Tobi29.ScapesEngine:ArgumentParserJVM:$scapesEngineVersion"
    scapesEngineTagStructureJSON =
            "com.github.Tobi29.ScapesEngine:TagStructureJSONJVM:$scapesEngineVersion"
    scapesEngineSWTUtils =
            "com.github.Tobi29.ScapesEngine:SWTUtilsJVM:$scapesEngineVersion"
    scapesEngineServerFramework =
            "com.github.Tobi29.ScapesEngine:ServerFrameworkJVM:$scapesEngineVersion"
    scapesEngineSQLFramework =
            "com.github.Tobi29.ScapesEngine:SQLFrameworkJVM:$scapesEngineVersion"
    scapesEngineNIOFileSystem =
            "com.github.Tobi29.ScapesEngine:NIOFileSystemJVM:$scapesEngineVersion"
    scapesEngineSQLite =
            "com.github.Tobi29.ScapesEngine:SQLiteJVM:$scapesEngineVersion"
    scapesEngineSQLJet =
            "com.github.Tobi29.ScapesEngine:SQLJetJVM:$scapesEngineVersion"
    scapesEngineMariaDB =
            "com.github.Tobi29.ScapesEngine:MariaDBJVM:$scapesEngineVersion"
    scapesEngineMBeansCPUReader =
            "com.github.Tobi29.ScapesEngine:MBeansCPUReaderJVM:$scapesEngineVersion"
    scapesEngineGLFWBackend =
            "com.github.Tobi29.ScapesEngine:GLFWBackendJVM:$scapesEngineVersion"
    scapesEngineCodecOGG =
            "com.github.Tobi29.ScapesEngine:CodecOGGJVM:$scapesEngineVersion"
    scapesEngineCodecMP3 =
            "com.github.Tobi29.ScapesEngine:CodecMP3JVM:$scapesEngineVersion"
    scapesEngineCodecWAV =
            "com.github.Tobi29.ScapesEngine:CodecWAVJVM:$scapesEngineVersion"
    scapesEngineFileSystems =
            "com.github.Tobi29.ScapesEngine:FileSystemsJVM:$scapesEngineVersion"
    scapesEngineGenerationUtils =
            "com.github.Tobi29.ScapesEngine:GenerationUtilsJVM:$scapesEngineVersion"
    scapesEngineGraphicsUtils =
            "com.github.Tobi29.ScapesEngine:GraphicsUtilsJVM:$scapesEngineVersion"
    scapesEngineShaderCLike =
            "com.github.Tobi29.ScapesEngine:ShaderCLikeJVM:$scapesEngineVersion"
    scapesEngineThreadUtils =
            "com.github.Tobi29.ScapesEngine:ThreadUtilsJVM:$scapesEngineVersion"
    scapesEngineTestAssertions =
            "com.github.Tobi29.ScapesEngine:TestAssertionsJVM:$scapesEngineVersion"
    scapesEngineOpenALSounds =
            "com.github.Tobi29.ScapesEngine:OpenALSoundsJVM:$scapesEngineVersion"
}

idea {
    module {
        excludeDirs += file(".jreCache")
    }
}
